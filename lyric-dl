#!/usr/bin/env phantomjs

function load(name) {
    if (name.substr(0, 1) == '/') {
        return require(phantom.libraryPath + name)
    } else {
        return require(name)
    }
}

var system = load('system')
var fs = load('fs');
var common = load('/core/common.js')
var minimist = load('/core/minimist.js')

var loader = {
    'ntes': load('/core/downloader/ntes.js'),
    'qq': load('/core/downloader/qq.js'),
}

var commandsList = [ 'search', 'server', 'url', ]
var commands = {}

for (var i in commandsList) {
    var name = commandsList[i]
    commands[name] = require(phantom.libraryPath + '/command/' + name + '.js')
}


commands.help = { 
    'handler' : function (opt) {
        if (opt['_'].length > 2) {
            var cmd = commands[opt['_'][2]]
            if (!cmd) {
                console.log('command "' + opt['_'][2] + '" not exists')
                phantom.exit(2)
            }
            console.log(cmd.help)
            console.log("\
GLOBAL OPTIONS:\n\
    --g-quiet                   quiet mode\n\
")
        } else {
            console.log("\
Usage: lyric-dl [command [arg [arg ...]]] [OPTIONS]\n\
\n\
Type 'lyric-dl help <command>' for help on a specific command.\n\
\n\
Available commands:")
            for (var i = 0; i != commandsList.length; i++) {
                console.log('   ' + commandsList[i])
            }
            console.log("\n\
GET MORE : https://github.com/frimin/lyric-dl\
    ")
        }
        phantom.exit(0)
    },
    "help": "usage:  help <command>\n",
}

var args = minimist.parse(system.args)

var cmd = args['_'][1]

if (args['help']) {
    cmd = 'help'
}

// handle global options

if (args['g-quiet']) {
    common.setLogVisible(false)
}

if (cmd != 'help' && args['_'].length < 2) {
    console.log("nothing to do")
    phantom.exit(2)
}

var f = commands[cmd].handler

if (f) {
    f(args)
} else {
    common.errorExit("unknown command : " + args['_'][1])
}
