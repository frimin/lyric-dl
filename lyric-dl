#!/usr/bin/env node

var parseArgs = require('minimist')
var common = require('./core/common.js')

var commandsList = [ 'search', 'download' ]
var commands = {}

for (var i in commandsList) {
    var name = commandsList[i]
    var cmd = require('./command/' + name + '.js')
    commands[name] = cmd
    var aliasList = commands[name].alias
    if (aliasList) {
        aliasList.forEach(function(e) {
            if (commands[e])
                throw 'command "' + e + '" exists'
            commands[e] = cmd
        });
    }
}

commands.help = { 
    'handler' : function (opt) {
        if (opt['_'].length > 3) {
            var cmd = commands[opt['_'][3]]
            if (!cmd) {
                console.log('command "' + opt['_'][3] + '" not exists')
                phantom.exit(2)
            }
            console.log(cmd.help)
/*
            console.log("\
GLOBAL OPTIONS:\n\
    --g-quiet                   quiet mode\n\
")*/
        } else {
            console.log("\
Usage: lyric-dl [command [arg [arg ...]]] [OPTIONS]\n\
\n\
Type 'lyric-dl help <command>' for help on a specific command.\n\
\n\
Available commands:")
            for (var i = 0; i != commandsList.length; i++) {
                if (commands[commandsList[i]].alias) {
                    console.log('   ' + commandsList[i] + ' (alias: ' + commands[commandsList[i]].alias.join(', ') + ')')
                } else {
                    console.log('   ' + commandsList[i])
                }
            }
            console.log("\n\
GET MORE : https://github.com/frimin/lyric-dl\
    ")
        }
        process.exit(2)
    },
    "help": "usage:  help <command>\n",
}

var args = parseArgs(process.argv)

var cmd = args['_'][2]

if (args['help']) {
    cmd = 'help'
}

// handle global options

/*if (args['g-quiet']) {
    common.setLogVisible(false)
}*/

if (cmd != 'help' && args['_'].length <= 2) {
    console.log("nothing to do")
    process.exit(2)
}

if (!commands[cmd]) {
    common.errorExit("unknown command : " + args['_'][2])
}

commands[cmd].handler(args)