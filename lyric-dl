#!/usr/bin/env phantomjs

var system = require('system')
var fs = require('fs');
var common = require(phantom.libraryPath + '/core/common.js')
var minimist = require(phantom.libraryPath + '/core/minimist.js')

var loadersets = {
    'ntes': require(phantom.libraryPath + '/core/downloader/ntes.js'),
    'qq': require(phantom.libraryPath + '/core/downloader/qq.js'),
}

var commands_list = [ 'url', 'server', 'search' ]
var commands = {}

for (var i in commands_list) {
    var name = commands_list[i]
    commands[name] = require(phantom.libraryPath + '/command/' + name + '.js').handler
}

commands.help = function (opt) {
    console.log("\
Usage: lyric-dl [cmd [arg [arg ...]]] [OPTIONS]\n\
\n\
GLOBAL OPTIONS:\n\
    --g-quiet                   quiet mode\n\
\n\
command: [url] - download lyric:\n\
\n\
    SUPPORT URL: \n\
    * ntes (cloudmusic) : http://music.163.com/#/m/song?id=<ID> \n\
    * qq (qqmusic) : https://y.qq.com/portal/song/<ID>.html \n\
\n\
    OPTIONS: \n\
    -o --output=<file>          name of output file, if translate lyric exists, named: <file>.tr\n\
    -O --out-format=<format>    output file in given format: <format>=[lrc, json]\n\
\n\
command: [search] - \n\
\n\
    SUPPORT SROUCE: \n\
    * ntes \n\
\n\
    OPTIONS: \n\
    -a --all                    print all information\n\
    -i --index                  print index\n\
    -u --url                    print url\n\
    -t --title                  print title\n\
    -s --singler                print singler\n\
    -b --album                  print album\n\
    --separator=<string>        set separator string (default: <space>)\n\
\n\
command: [server] - launch http service:\n\
\n\
    SUPPORT ACTION: \n\
    * id : request lyric info - http://localhost:8080/?act=id&id=<song_id>&s=<source_type> \n\
\n\
    OPTIONS: \n\
    -h --host=<host>            bind address (default: 127.0.0.1)\n\
    -p --port=<format>          bind port (default: 8080)\n\
\n\
samples: lyric-dl url <URL> -o download\n\
\n\
GET MORE : https://github.com/frimin/lyric-dl\
")
    phantom.exit(0)
}


var args = minimist.parse(system.args)

var cmd = args['_'][1]

if (args['help']) {
    cmd = 'help'
}

// handle global options

if (args['g-quiet']) {
    common.setLogVisible(false)
}

if (cmd != 'help' && args['_'].length < 2) {
    console.log("nothing to do")
    phantom.exit(2)
}

var f = commands[cmd]

if (f) {
    f(args)
} else {
    common.errorExit("unknown command : " + args['_'][1])
}
